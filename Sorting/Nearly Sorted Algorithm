Given an array of n elements, where each element is at most k away from its target position. The task is to print array in sorted form.

Input:
First line consists of T test cases. First line of every test case consists of two integers N and K, denoting number of elements in array and at most k positions away from its target position respectively. Second line of every test case consists of elements of array.

Output:
Single line output to print the sorted array.

Constraints:
1<=T<=100
1<=N<=100
1<=K<=N

Example:
Input:
2
3 3
2 1 3
6 3
2 6 3 12 56 8
Output:
1 2 3
2 3 6 8 12 56

////////////////////// Solution /////////////////////////////////

#include <iostream>
using namespace std;

int main() {
	//code
	 int t,n,k;
	 int arr[100];
	 cin>>t;
	 while(t--)
	 {
	     cin>>n>>k;
	     for(int i=0;i<n;i++)
	     {
	         cin>>arr[i];
	     }
	     //applying insertion sort
	     for(int i=1;i<n;i++)
	     {
	         if(arr[i]<arr[i-1])
	         {  
	             int j=i-1;
	             while(j>=0 && arr[j]>arr[j+1])
	              {
	                   swap(arr[j],arr[j+1]);
	                   j--;
	              }
	              
	         }
	     }
	     for(int i=0;i<n;i++)
	     {
	         cout<<arr[i]<<" ";
	     }
	     cout<<endl;
	 }
	 
	
	return 0;
}
