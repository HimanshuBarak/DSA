Given an array arr[] of distinct integers of size N and a value sum, the task is to find the count of triplets (i, j, k), having (i<j<k) with the sum of (arr[i] + arr[j] + arr[k]) smaller than the given value sum.


Example 1:


Input: N = 4, sum = 2
arr[] = {-2, 0, 1, 3}
Output:  2
Explanation: Below are triplets with 
sum less than 2 (-2, 0, 1) and (-2, 0, 3)






Solution:

class Solution{
	
	
	public:
	long long countTriplets(long long arr[], int n, long long sum)
	{
	    // Your code goes here
	    
	    sort(arr,arr+n);
	    long long int i=0,k=0,count =0;
	    while(arr[i]<sum &&i<n-1)
	    {
	        k = sum-arr[i];
	        int l=i+1,r=n-1;
	        while(l<r)
	        {
	            if(arr[l]+arr[r]<k)
	            {
	                count+=(r-l);
	                l++;
	            }
	            else
	             r--;
	        }
	        i++;
	    }
	    return count;
	}
		 
