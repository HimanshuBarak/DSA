BinaryTreeNode<int>* helper(string &str, int l,int r){
    if(l>r)
        return NULL;
    
    BinaryTreeNode<int> *root = new BinaryTreeNode<int>(str[l] - '0');
    int c=0,i,index=-1; 
    
    if(l+1<=r && str[l+1]=='('){
         for( i=l+1;i<=r;i++){
        if(str[i]=='(')
            c++;
        else if(str[i]==')')
            c--;
        if(c==0){
            index=i;
            break;
        }
         
    }
      
    }
    if(index!=-1)
    {
        root->left = helper(str,l+2,index-1);
        root->right = helper(str,index+2,r-1);    
    }
    return root;
}
BinaryTreeNode<int>* treeFromBracket(string &str)
{
     return  helper(str,0,str.length()-1);
}
