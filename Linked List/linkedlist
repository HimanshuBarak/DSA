
//
// Created by himan on 11/3/2021.
//
#include<bits\stdc++.h>
#define ll long long int

using namespace std;

class Node {
public:
     ll data;
     Node* next;
     //default constructor
     Node()
     {
         this->data=0;
         this->next= NULL;
     }
    Node(int data)
    {
        this->data=data;
        this->next =NULL;
    }

}*head=NULL;

void display(){
    Node* temp = new Node();
    if(!head)
        cout<<"Linked List is empty";
    else
    {
        temp=head;
        while(temp){
            cout<<temp->data<<" ";
            temp = temp->next;  //incrementing the pointer
        }
    }
}
//insert at head
void insert_head(int val){
    Node* temp = new Node(val);  // to allocate memory at run time

    if(!head)
    {
        head=temp;

        return;
    }
    temp->next=head;
    head=temp;
}

//insert node at a given position
void insertNode(int pos,int val)
{
     Node* temp = new Node();
     temp=head;
     //first find the position to insert
     int t=1;
     while(t<pos-1)
     {
         temp= temp->next;
         t++;
     }

     Node* r =new Node(val);
     r->next = temp->next;
     temp->next =r;
}

void deleteNode(int pos)
{
    Node* temp =head;
    int t=1;
    //check the length of the linked list
    while(temp->next!=NULL)
    {
        temp=temp->next;
        t++;
    }

    if(pos<1 || pos>t)
    {
        cout<<"Invalid position";
        return;
    }

      t=1;
        temp=head;
        if (pos == 1) {

            // Update head
            head = head->next;
            delete temp;
            return;
        }
        while(t<pos-1)
        {
            temp= temp->next;
            t++;
        }
        Node* prev =temp;
        temp=temp->next;
        prev->next=temp->next;
       delete temp;

}

int main()
{
    insert_head(7);
    insert_head(5);
    insert_head(3);
    insert_head(9);
    insert_head(8);
    insert_head(1);
    insertNode(3,22);
    display();
    cout<<endl;
    deleteNode(1);
    display();
    return 0;
}
