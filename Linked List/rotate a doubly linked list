//
// Created by himan on 11/13/2021.
//

#include<bits/stdc++.h>

using namespace std;

class Node
{
public:
    char data;
    Node* next;
    Node* prev;
    Node(int data)
    {
        this->data=data;
        prev=NULL;
        next=NULL;
    }
};

void insertAtHead(Node* &head, int data)
{
    Node* n = new Node(data);
    if(head==NULL)
    {
        head=n;
        return;
    }
    n->next=head;
    head->prev=n;
    head=n;
    return;
}
void insertAtTail(Node* &head, int data)
{
    if(head==NULL)
    {
        insertAtHead(head,data);
        return;
    }
    Node* temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    Node* n=new Node(data);
    temp->next=n;
    n->prev=temp;
    return;
}
void display(Node* head)
{
    while(head!=NULL)
    {
        cout << head->data << "-->";
        head=head->next;
    }
    cout << "NULL\n";
}


Node* rotate_N(Node* head,int  n){

    Node* tail=head;
    if(n<1)
        return head;

    while(tail->next!=NULL)
    {
        tail=tail->next;
    }
     tail->next=head; //we converted it to a circular node

    Node* temp=tail;
    while(n--)
    {
        temp=temp->prev;

    }
    head=temp;
    temp=temp->prev;
    temp->next=NULL;
  return head;
}






int main()
{
    Node* head=NULL;
    insertAtTail(head,'a');
    insertAtTail(head,'b');
    insertAtTail(head,'c');
    insertAtTail(head,'d');
    insertAtTail(head,'e');

    int n=2;
    cout << "\nBefore Rotation : \n";
    display(head);
    head=rotate_N(head,n);
    cout << "\nAfter Rotation : \n";
    display(head);
    cout << "\n\n";

    return 0;
}
